#!/usr/bin/env python

import rospy
from gpup_gp_node.srv import gpup_transition, batch_transition, gpup_transition_repeat, batch_transition_repeat
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
from matplotlib.patches import Ellipse
import pickle


np.random.seed(10)

state_dim = 4

gp_srv = rospy.ServiceProxy('/gp/transition', batch_transition)
# gpup_srv = rospy.ServiceProxy('/gpup/transitionRepeat', gpup_transition_repeat)
# msg_gp = batch_transition_repeat()
msg_gpup = gpup_transition_repeat()

# s = np.array([-37.7176,111.885,13.5362,15.0298,-5.99582,-6.58238,-35.307,111.762,9.81271,16.368,7.40934,-2.44048,-37.3585,106.162,11.0834,16.962,-1.13337,-5.73732,-39.8986,106.362,13.8876,14.9862,2.39648,-3.27746,-49.359,112.983,11.6406,17.6162,-4.87899,-4.49071,-41.6331,114.824,8.16377,12.7501,-1.79412,-3.30189,-29.8912,105.741,9.08832,19.1319,-9.57696,0.791578,-34.7115,105.989,13.1278,17.6729,-3.40575,-11.1371,-41.5464,103.805,14.5931,14.6072,4.31866,-5.06412,-38.962,108.222,12.4337,18.0732,5.48878,-8.47174,-27.9901,115.595,14.2044,12.1524,6.92338,-12.0515,-43.2485,105.572,7.65641,18.1912,-5.3079,-12.9228,-40.959,109.606,12.0642,17.0673,-4.97769,1.46943,-47.6933,102.77,12.2693,18.9596,1.63008,-3.50399,-42.6483,111.639,13.7612,16.3442,-7.46649,2.17593,-44.2496,114.184,12.5261,15.9989,-4.26888,-5.75006,-48.7751,116.497,10.2433,14.164,2.31977,-8.8731,-38.3112,107.139,10.1854,17.6285,2.25778,-2.02823,-50.4431,113.929,9.18317,15.2808,-4.51351,-6.32624,-44.4177,108.623,11.3975,15.3516,1.3447,-5.32419,-35.3915,104.917,14.0775,18.0783,-5.97812,-1.23184,-40.9853,115.305,13.8244,16.5916,-3.78972,0.299646,-37.5528,112.4,10.8755,18.3081,-1.61026,-3.48802,-41.0885,115.912,10.8572,15.9099,3.14886,-7.71751,-42.6652,113.943,11.5875,15.2024,2.08677,1.91893,-39.9652,106.959,14.155,16.1795,9.93919,-6.03121,-40.3514,109.253,8.9498,16.557,-8.82072,-3.50315,-43.104,105.961,13.5026,21.7536,-5.63027,4.49309,-47.1357,109.923,13.4299,18.3311,-2.19692,-6.9148,-42.9946,115.823,16.5196,14.5809,-1.16125,-4.62264,-49.5292,115.911,9.5532,17.028,-3.63117,0.384684,-38.8795,114.549,10.8891,12.396,-4.63636,-2.58503,-36.088,118.52,12.2155,15.731,-2.56561,6.22025,-38.779,106.994,14.8046,17.0608,-6.32041,0.0163919,-37.9504,116.139,10.5442,15.5389,-0.0570738,-0.585068,-33.0682,106.33,11.6891,16.1517,-4.7888,1.73269,-38.3697,111.829,14.5558,17.2743,2.3034,-3.55928,-48.5238,116.327,9.11931,15.62,-9.68431,0.444383,-30.4226,113.337,10.8334,16.6112,-3.06022,2.00095,-30.8244,106.503,10.4354,15.4219,4.11882,0.841614,-55.4065,111.346,11.7785,14.6851,0.0397191,-7.85641,-52.6303,111.509,8.48103,18.2825,-5.87593,-7.76958,-47.7112,110.974,9.00323,17.7912,-5.39837,-8.79703,-47.4023,105.651,11.379,13.6526,-8.15554,-5.7294,-51.8418,117.013,9.89267,15.1955,-2.50121,-12.272,-38.8979,116.472,12.9512,13.5111,1.35099,-1.96686,-36.3083,111.37,10.8287,14.2766,-5.13281,2.44817,-44.6081,117.611,15.4593,15.3186,-5.23627,-4.31951,-25.2724,112.182,12.7423,17.6592,-4.09004,-9.01441,-47.7312,105.157,12.1855,15.2689,4.33347,-0.0606032,-36.6808,105.761,14.2153,13.4594,-5.29894,-1.99319,-42.2822,106.73,16.6186,16.5681,-13.7536,-4.1853,-54.5696,114.721,12.4389,15.6095,-10.5576,1.57891,-47.5849,111.753,11.0992,16.3176,0.29371,-1.24254,-43.2955,111.762,12.3587,13.7044,5.25036,-3.70978,-40.2464,106.137,11.0645,11.4381,-2.03326,0.872012,-39.6056,114.239,9.20187,15.2768,-2.09236,5.63506,-40.9748,107.736,15.4479,14.2564,2.17585,-5.70507,-40.3318,114.197,14.0646,16.7147,-10.4533,0.442476,-37.8809,114.577,11.917,12.486,-7.89583,-1.50836,-41.4361,107.154,9.99506,17.0894,-8.34998,0.551742,-50.5151,114.511,10.3837,15.6887,-3.45207,-2.96107,-43.4473,105.295,14.8049,17.1786,5.93822,-8.99995,-43.7353,110.03,13.1395,17.2011,-11.861,-7.09724,-40.1235,111.123,13.8263,14.212,-10.0017,-2.65459,-44.5408,102.677,13.7297,18.8181,2.39401,2.07901,-36.2076,112.759,9.82801,15.0751,-6.17026,2.53672,-38.3039,107.538,12.489,16.7453,-7.6488,-2.27343,-38.2885,107.859,12.6826,15.8259,0.0764822,-3.6022,-40.2934,105.962,15.6934,15.3524,9.11623,-3.45258,-39.6869,109.947,16.8365,18.9631,-8.07423,-5.5708,-42.9509,104.005,16.653,16.4235,3.33235,-3.04868,-25.7765,114.026,12.9257,14.1778,-9.11222,-0.695505,-43.3393,111.717,14.6284,15.6227,-3.85955,-13.7413,-44.5631,108.808,7.22885,14.8745,-3.82664,-5.57026,-51.42,116.92,12.0001,13.2296,-1.78498,-12.1894,-40.4807,110.127,10.4567,15.5138,-2.54685,-10.0239,-41.1341,107.138,10.7812,12.7737,-2.01575,-7.55314,-45.9119,105.007,9.83192,14.4814,-5.50016,-10.0208,-43.0011,113.378,11.1004,17.9397,-6.82715,-5.33082,-43.5234,111.021,12.9346,15.6534,-5.39541,4.25472,-45.1047,114.654,9.72816,12.1306,2.47386,-5.70927,-47.1498,112.586,13.1997,19.1252,0.350366,0.285943,-38.3465,109.43,12.7374,17.8555,-4.83624,-4.56121,-33.4215,113.168,13.4965,16.2342,-2.69687,-4.87224,-51.7974,113.129,12.239,14.2162,-3.888,2.98871,-46.9795,106.576,13.8015,18.0723,0.539254,-2.4453,-51.5657,111.253,14.3708,17.5502,3.42427,-7.45609,-41.0479,111.703,12.6829,17.9012,-14.3993,-11.8738,-29.1583,107.66,12.4447,20.201,-5.181,-6.99067,-40.5346,110.678,13.9511,15.3244,5.7088,-0.312087,-37.741,102.016,14.4182,15.9376,9.35521,0.291952,-36.4105,105.685,11.205,15.2214,3.75752,-2.54126,-43.6815,114.632,11.0809,15.2505,-8.90742,-0.888596,-33.8058,109.649,12.1998,12.379,-0.418849,0.433459,-42.3782,111.838,11.3656,14.3617,2.60231,1.05214,-45.2111,111.865,13.2017,15.9142,-3.05587,-3.99195,-55.9472,112.436,13.394,18.0437,2.31099,-7.67111,-35.148,110.258,13.1256,17.1881,-3.17751,-6.58579,-42.0346,105.428,12.6286,18.6135,-3.02264,-7.06092])
# sk = np.array([-34.6271,112.658,13.4617,15.0001,-5.57805,-5.82137,-32.674,113.108,10.1121,15.9719,8.1872,-2.06985,-34.5076,107.793,11.5389,16.3767,0.00871078,-5.05634,-37.2124,107.706,14.2089,14.8558,4.46122,-3.59513,-47.686,113.894,11.6616,17.2315,-3.06825,-4.08337,-38.0001,116.242,8.52749,12.5252,-0.655768,-2.39735,-27.0486,107.327,9.25721,18.5183,-7.91635,1.09548,-33.6915,107.417,13.4965,17.2851,-2.13599,-9.96659,-38.5548,105.204,15.1458,14.0275,5.93256,-4.20707,-35.5871,110.026,12.8179,18.0358,6.55661,-8.08455,-26.1347,116.941,14.6237,11.8962,7.93412,-11.7902,-39.6321,106.265,7.69869,17.6224,-4.76577,-12.286,-38.5517,111.402,12.4281,16.4894,-3.05575,1.51611,-43.535,104.18,12.705,18.5961,2.96511,-3.40793,-39.3462,113.446,14.2521,16.2485,-5.72878,2.62087,-41.4313,115.859,12.4833,15.4401,-3.72994,-5.89669,-45.5177,118.375,10.527,13.7391,2.78098,-8.23686,-36.4004,108.366,10.5273,17.1497,2.12177,-1.83448,-47.9064,115.28,9.73807,15.0179,-3.53791,-5.46461,-41.8613,110.469,11.7895,15.1218,2.78627,-6.0197,-32.2359,106.323,14.0618,17.5791,-5.42911,0.100651,-39.0806,116.345,14.385,16.1118,-2.73757,0.610828,-34.4003,113.77,11.1908,17.9873,-0.778748,-3.24708,-37.6793,117.043,11.2915,15.6992,3.78095,-7.21919,-39.5805,115.994,11.7431,14.9602,3.39181,2.68629,-35.4358,108.639,14.6199,16.0166,10.9807,-5.38156,-37.1605,110.525,9.37217,15.9247,-8.96136,-2.73724,-40.0357,107.687,13.6468,21.1284,-4.5908,4.40644,-45.1321,111.189,13.8058,18.2683,-0.9023,-6.30003,-40.7662,116.885,17.3709,14.254,-1.27648,-4.08569,-45.1561,117.192,9.79709,16.5115,-1.76692,1.10191,-37.3764,116.253,11.2089,11.8322,-3.83927,-3.26364,-33.778,119.676,12.1635,15.5556,-1.28598,6.9455,-36.3813,107.731,15.2624,16.558,-6.0181,-0.0988373,-34.5321,117.909,11.0076,14.7682,-0.189855,1.39087,-30.5304,107.271,12.061,15.8768,-3.53352,2.43678,-34.5719,112.581,14.812,16.9309,1.97946,-3.99239,-45.4057,117.797,9.13544,15.7811,-8.49739,0.996077,-26.8083,114.543,11.1549,16.2884,-0.910108,2.35723,-26.7109,107.163,10.6588,15.2794,4.06155,1.43918,-53.6395,112.71,12.0683,13.912,0.392736,-7.1381,-50.4076,112.664,8.82033,17.7575,-4.7587,-6.71868,-44.0098,112.49,9.42367,17.2231,-4.51806,-7.48886,-44.1189,106.729,11.5529,13.4404,-6.87391,-4.79809,-49.7047,118.457,10.3119,14.4687,-0.721239,-12.3379,-34.3205,118.157,13.7282,13.3277,1.69659,-1.85947,-33.6251,112.599,11.1247,13.9986,-2.66503,2.58764,-41.3078,118.955,15.6238,14.7841,-3.97472,-4.17723,-22.4594,113.763,13.1036,17.3041,-3.07897,-8.95137,-45.6742,107.136,12.3983,14.8887,4.42369,-0.257578,-34.9237,107.059,14.4771,12.8795,-5.16153,-1.11794,-39.3661,107.988,16.5835,16.106,-12.8038,-3.83282,-52.1952,116.036,12.9013,15.0731,-8.9572,1.27492,-45.419,113.381,11.3486,16.0882,2.08176,-0.594718,-39.3662,112.45,13.0443,13.4412,5.60244,-3.88347,-38.02,107.555,11.4151,10.8825,-0.333361,0.992103,-37.1304,115.734,8.9492,14.5142,-0.448926,6.1683,-38.4143,109.301,15.9319,14.4219,2.69456,-4.27837,-38.5209,115.632,14.1306,16.0951,-9.61301,1.2013,-35.8925,115.852,11.9923,12.1801,-6.41125,-0.25758,-38.9387,109.089,10.2169,16.4847,-6.66628,0.0456315,-46.0644,116.404,10.6902,15.6188,-2.73277,-2.43286,-40.8367,106.802,15.1589,16.6763,7.28577,-7.49494,-40.5605,110.533,13.4787,16.574,-12.71,-6.59367,-38.2424,113.125,14.3756,13.7399,-9.35685,-1.97014,-42.5784,104.689,14.122,18.6004,4.3203,2.50996,-33.334,114.098,10.4708,14.7457,-4.38276,2.90989,-36.3497,108.979,12.7467,16.1701,-6.77792,-1.70071,-35.5307,109.371,12.7563,15.6651,0.725473,-3.68622,-38.1763,107.699,15.9085,15.0566,8.9453,-2.83246,-37.9254,111.355,17.0876,18.6229,-7.2168,-4.17175,-38.6704,105.662,16.8697,16.3324,3.7526,-3.36777,-23.2489,115.506,13.1364,13.6558,-7.77611,-0.692189,-38.8603,113.719,14.9168,15.7976,-3.88498,-13.4656,-42.1977,110.187,7.87579,14.9089,-3.19439,-5.81492,-48.2539,117.673,12.0581,12.9886,-0.350067,-11.0081,-38.2368,112.158,11.1622,15.431,-1.18924,-10.0906,-38.3387,108.107,11.1857,12.6719,-0.993292,-7.84727,-41.8425,106.336,10.0205,14.313,-4.39755,-8.89051,-39.821,114.457,11.1818,17.5557,-6.78717,-4.81086,-39.8141,112.678,13.0416,15.5664,-4.50016,3.76408,-42.3963,115.17,9.98958,12.1529,2.52776,-4.84506,-45.2591,114.212,12.9486,18.828,0.968822,0.352114,-35.5726,111.087,12.9559,17.4764,-4.10538,-3.43284,-30.0168,114.531,14.0336,15.7253,-2.38687,-4.35172,-48.8566,114.526,12.6353,13.7105,-2.9845,3.13429,-44.1551,107.262,13.9056,17.5063,0.692456,-2.718,-49.7204,112.473,14.5474,17.0268,3.68573,-7.84005,-38.3195,112.613,13.062,17.8354,-12.4228,-10.9113,-26.4703,109.106,12.5154,20.1053,-4.67627,-7.05488,-36.3701,112.195,14.0477,14.9695,7.55416,-0.190896,-35.7019,103.038,14.9063,15.7738,11.9548,0.985293,-34.0614,106.726,11.7153,15.1091,5.60572,-2.23857,-40.6262,115.65,11.2743,14.9535,-7.57322,-0.537856,-30.5524,110.571,12.5979,12.1484,0.592489,0.0646902,-40.1893,113.046,11.3836,13.8045,3.20198,0.773351,-43.091,113.055,13.6636,15.5093,-3.09582,-3.85507,-53.861,114.015,13.2306,17.8615,3.55593,-6.98536,-31.9466,111.822,13.4257,17.0242,-2.39775,-6.24648,-38.33,106.199,12.8285,18.1199,-2.30784,-5.57517])
# a = np.array([-1.,-1.])
# s = np.array([60.5009,115.463,12.5108,10.2954,4.2398,-4.61704,60.7158,115.547,12.4284,10.2308,4.0894,-4.7488,52.1324,92.1789,17.5151,4.14497,-2.01396,-6.05321,60.6893,115.53,12.4295,9.99024,3.78387,-4.85633,64.2174,118.825,16.1995,7.55835,11.4136,0.046057,60.817,115.759,12.4502,10.1502,4.08841,-4.6652,64.8996,117.842,16.0775,7.6153,10.8174,0.882686,63.4772,112.901,17.9695,8.65981,2.6878,3.55892,60.7836,115.815,12.4668,10.1413,4.14695,-4.62728,60.5066,115.739,12.13,10.1068,4.02692,-4.8514,64.9626,117.857,16.0749,7.61186,10.8656,0.840414,60.7759,115.768,12.4196,10.1398,4.0669,-4.64932,64.8702,117.846,16.066,7.60952,10.8359,0.862443,60.5311,115.706,12.1268,10.1303,4.13271,-4.89859,52.0363,92.1415,17.4832,4.0746,-2.80608,-5.85953,52.2101,92.2381,17.501,4.14912,-2.04401,-5.96011,60.5033,115.704,12.1395,10.116,4.04529,-4.8793,52.0995,92.1965,17.4963,4.14981,-2.08221,-6.07634,60.4734,115.714,12.1182,10.0894,4.06671,-4.90144,60.7079,115.484,12.4661,9.97452,3.86618,-4.88518,64.7805,117.924,16.0711,7.60973,10.8106,0.882108,63.1625,110.75,12.9564,6.52724,7.47702,-14.2466,64.5748,117.761,16.0873,7.74988,10.6627,0.276551,60.9321,115.781,12.4155,10.1775,4.14036,-4.67789,51.8498,92.1539,17.4081,4.41843,-2.23495,-6.47679,73.5224,98.8962,18.8058,7.811,-16.4463,-8.36676,63.9157,110.333,13.1529,6.29794,7.2209,-13.8635,51.8407,92.1756,17.4528,4.3995,-2.30584,-6.51245,60.8699,115.87,12.4304,10.1787,4.11311,-4.66469,52.2011,92.1643,17.5095,4.14012,-2.05781,-6.04003,52.0325,92.1053,17.5458,4.06744,-2.82963,-5.83399,60.5549,115.71,12.158,10.1671,4.06521,-4.88058,64.6625,117.831,16.0991,7.67952,10.6135,0.282009,60.7145,105.321,18.5874,5.85182,4.49469,-15.2588,51.9873,92.1311,17.5219,4.04256,-2.76068,-5.83866,60.749,115.87,12.4314,10.1824,4.05305,-4.62495,64.9235,117.876,16.0554,7.5939,10.8379,0.831498,64.2499,118.812,16.1744,7.57827,11.5262,0.014695,60.6855,115.526,12.408,10.2252,4.08331,-4.78545,36.6872,105.793,11.6838,10.2104,2.69325,-12.3064,38.8253,101.743,22.8497,3.2301,14.7308,-2.49125,38.8891,101.878,22.8419,3.22625,14.5737,-2.76281,60.6526,115.517,12.4202,9.99227,3.75214,-4.85627,60.5301,115.522,12.4245,10.2207,4.02806,-4.72386,73.4678,98.862,18.8502,7.82088,-16.5088,-8.44089,63.9281,110.361,13.1764,6.29408,7.17345,-13.8581,60.8007,115.557,12.4419,9.97173,3.82127,-4.81487,63.4561,112.884,17.9663,8.65207,2.64842,3.59694,61.5291,105.584,18.3927,5.87415,4.52847,-15.7096,73.5025,98.8286,18.8301,7.81126,-16.469,-8.35966,63.8225,110.373,13.1528,6.27583,7.19117,-13.9212,63.9065,110.356,13.1433,6.29231,7.14607,-13.8472,64.6428,117.869,16.0688,7.69737,10.6109,0.237459,63.5238,112.942,17.9766,8.67272,2.6806,3.69511,73.5137,98.8623,18.828,7.82028,-16.4663,-8.34228,63.9494,112.999,17.7398,8.55158,2.90287,4.13641,51.2738,92.427,17.2517,4.42985,-2.65756,-6.24231,38.268,101.985,22.7305,3.13618,14.8967,-2.96343,64.2329,118.798,16.1579,7.58991,11.5082,0.0458804,52.0675,92.2333,17.4713,4.15959,-2.08077,-6.09613,60.6413,115.58,12.4172,10.2343,4.04156,-4.67256,50.2231,102.239,18.0364,7.43939,21.3858,-0.3887,47.5856,99.6763,16.1863,12.3423,-8.48804,-10.2012,64.5767,117.889,16.0797,7.72167,10.8174,0.25794,52.0988,92.1343,17.5097,4.05257,-2.78865,-5.85402,63.9444,112.948,17.7573,8.58953,2.81368,4.07571,51.7847,92.1138,17.4416,4.40099,-2.24669,-6.58194,51.9735,92.1082,17.4596,4.40409,-2.32385,-6.49583,64.3419,118.753,16.1685,7.56296,11.4009,0.0528284,28.0344,116.454,12.741,10.7083,0.468802,-8.65194,64.6267,117.844,16.0768,7.73681,10.7119,0.252243,52.1416,92.1817,17.4521,4.15778,-2.11937,-6.00906,39.0876,107.132,17.3045,9.55774,-0.817244,3.52694,52.2475,92.1952,17.4936,4.14236,-2.12186,-6.03825,60.7888,115.788,12.4352,10.1657,4.19648,-4.67237,60.3936,115.454,12.5136,10.2786,4.14894,-4.70965,60.5857,115.577,12.3996,10.2156,4.06873,-4.77822,51.9342,92.1169,17.4364,4.40122,-2.30899,-6.53645,39.4001,107.257,17.2077,9.76353,-0.0875728,3.4101,60.5457,115.546,12.4052,10.2489,3.97611,-4.64912,41.5118,103.076,14.6065,8.4319,-4.99261,-14.0883,45.7187,104.16,15.6911,8.46653,15.4924,-13.1682,51.3537,92.4355,17.2471,4.427,-2.70381,-6.28489,60.5903,115.523,12.4029,10.2291,3.938,-4.73028,64.6286,117.774,16.0929,7.69783,10.5738,0.267047,15.0793,103.867,12.1032,10.7222,-5.82279,0.563278,60.3965,115.716,12.1574,10.085,4.05091,-4.92868,60.6639,115.783,12.426,10.1432,4.1669,-4.64932,60.75,115.786,12.4417,10.1518,4.16309,-4.63508,27.7336,116.591,12.7298,10.7594,0.825724,-8.79069,61.8082,105.464,18.496,5.82261,4.68011,-15.6817,60.433,115.44,12.5312,10.2818,4.18067,-4.61014,60.7762,105.498,18.4297,5.7431,4.27376,-15.4867,63.2027,110.753,12.9437,6.50798,7.49687,-14.2008,51.9918,92.2029,17.5174,4.06824,-2.74045,-5.87284,52.1132,92.2445,17.5004,4.16163,-2.13018,-6.01462,63.943,112.977,17.7402,8.57522,2.93897,4.17534,50.6176,113.768,14.6206,8.2454,6.73778,-16.9989,60.6975,115.503,12.4433,9.99367,3.82451,-4.77868,64.9659,117.911,16.0282,7.63284,10.8746,0.942074])
# sk = np.array([60.7822,115.481,12.0597,9.64754,3.08741,-5.02867,73.6736,98.7497,18.5024,7.50328,-16.713,-8.23608,52.1554,92.2144,17.106,3.77686,-2.45866,-5.9807,60.7906,115.877,11.7419,9.84546,4.53916,-4.98245,52.1806,92.1438,17.0205,4.15711,-2.48521,-6.4247,63.7416,112.824,17.6677,8.30116,2.35043,3.61195,52.2681,92.2271,17.0145,4.07475,-2.29645,-6.36489,60.8729,105.434,18.2825,5.57975,4.30045,-15.3186,64.3988,117.665,15.8225,7.41651,10.46,0.381214,52.5416,92.2913,17.0966,3.79075,-1.99904,-5.75992,52.5946,91.8791,17.1024,3.71973,-2.04848,-6.00101,60.9303,115.613,11.8513,9.74909,4.06255,-4.8677,51.9304,92.1653,17.0578,4.01314,-2.41128,-6.53507,61.1743,115.766,12.0977,9.92755,3.91387,-4.3943,61.1403,105.111,18.2744,5.35066,4.4416,-14.8973,52.2502,91.9468,17.1064,3.8838,-2.1244,-5.93324,52.3678,92.1679,17.2668,3.71044,-3.38133,-5.68588,52.2976,92.227,17.1026,3.92597,-2.15729,-5.8571,60.6796,115.959,11.8119,9.88146,3.75178,-4.74693,60.3398,115.691,11.86,9.81251,4.28141,-4.82925,65.1984,117.784,15.8124,7.2766,10.8054,0.789236,65.1754,117.711,15.6641,7.41871,10.7816,0.786148,60.9848,105.241,18.1482,5.62944,4.43051,-15.3273,61.4203,115.587,12.1577,9.85202,3.94342,-4.93455,51.7619,92.1226,17.0464,4.03471,-2.35263,-6.65321,73.6798,98.9662,18.5605,7.47743,-16.5705,-8.22708,65.1232,117.81,15.7787,7.27185,10.5868,0.960189,52.121,92.4585,17.0983,4.02454,-2.66766,-6.43891,51.7564,91.9197,17.0664,4.09061,-2.31098,-6.26669,52.3703,92.2671,17.1778,3.84583,-1.99135,-5.96949,65.0677,117.806,15.7543,7.35333,10.6511,0.426279,52.2787,92.1036,17.1359,3.71229,-3.09137,-5.6614,60.4152,115.611,11.8932,9.88554,3.9808,-4.74134,60.7003,105.293,18.3026,5.53401,4.68036,-15.2741,64.6478,117.729,15.6877,7.32764,10.7798,0.980037,61.0109,115.882,12.0909,9.66462,3.71593,-4.51735,65.025,118.195,15.7352,7.27926,10.798,1.02314,52.3413,92.2144,17.1943,3.80206,-2.07846,-6.12931,52.0884,92.1999,17.1751,3.699,-3.08252,-5.645,36.824,105.725,11.3691,9.84269,2.4037,-12.2808,39.3389,101.703,22.4486,2.94855,14.5689,-2.33632,38.7531,101.713,22.5026,2.90123,14.3623,-2.83951,52.0619,92.1255,17.3212,3.65863,-2.68802,-5.43322,60.6907,115.513,12.2195,9.92131,4.12983,-4.69753,73.4886,98.7253,18.6041,7.5203,-16.5205,-8.20863,63.7347,112.814,17.6861,8.40825,2.49904,3.45019,60.5574,115.632,11.7402,9.81411,3.88875,-4.54205,60.7325,115.631,11.7284,9.83942,3.90176,-4.5371,62.06,105.657,18.0247,5.51048,4.30377,-15.7855,74.0268,98.8638,18.6549,7.5386,-16.2564,-8.07953,51.9166,92.1009,17.0959,4.08414,-2.30353,-6.29052,51.9268,92.0345,17.1467,4.13987,-2.44327,-6.39881,63.9256,112.827,17.7192,8.29856,2.39089,3.8344,64.9596,117.931,15.6834,7.33848,10.6603,0.882277,73.6137,98.7699,18.508,7.53281,-16.6598,-8.3211,52.1725,91.923,17.1402,4.0679,-2.17732,-6.56377,51.625,92.2329,16.9279,3.99939,-2.55221,-6.18614,38.4666,101.962,22.4283,2.86971,14.4748,-2.95298,63.9135,118.832,15.8276,7.16569,11.1614,0.183657,52.1716,92.3465,17.1687,3.84975,-2.17626,-6.26046,61.3706,115.774,12.1148,9.78693,3.8716,-4.39822,50.4433,102.039,17.725,7.19646,21.0686,-0.188741,47.9204,99.6541,15.7927,12.0041,-8.57151,-10.0775,52.5332,92.058,17.2905,3.88869,-2.32493,-6.03866,65.3583,117.767,15.7114,7.31093,10.8345,0.906126,64.2553,110.251,12.823,5.89665,6.89714,-13.8453,52.4204,92.2321,17.0699,4.07632,-2.54053,-6.82879,52.0603,92.1618,17.0755,3.89136,-2.53995,-6.3075,61.3731,105.131,18.2687,5.57384,4.12293,-15.0829,27.9161,116.172,12.3623,10.4225,0.890217,-8.55935,64.3767,117.73,15.826,7.18695,10.7959,0.893909,52.4921,92.3063,17.0436,3.92819,-2.4042,-6.03127,39.364,107.026,16.9526,9.21124,-0.88567,3.58391,52.6299,92.3269,17.1132,3.94929,-2.35198,-5.74286,60.6524,115.63,12.1242,9.83634,4.39076,-4.93377,61.2988,115.689,12.0513,9.6527,3.71545,-4.99307,61.0348,115.654,12.0695,9.87351,3.96749,-5.02063,52.2646,91.9771,17.0748,4.04605,-2.52164,-6.62525,39.5795,107.107,16.7993,9.45253,-0.287706,3.52016,61.0454,115.723,12.2261,9.94596,4.29979,-4.42534,41.4116,102.976,14.2075,8.1052,-5.122,-13.9273,45.6974,104.276,15.3925,8.20847,15.217,-13.1595,51.0824,92.2256,16.9563,4.05719,-2.8044,-6.35609,60.8992,115.821,12.073,9.82176,3.73881,-4.70951,61.0867,115.544,11.8079,9.84036,4.07912,-4.98365,61.1414,115.793,11.7233,9.7556,3.82207,-4.55692,65.3301,117.865,15.6043,7.29552,10.7801,0.788941,64.93,117.833,15.5244,7.17036,11.0057,0.905777,63.3738,110.628,12.6038,6.12861,7.25422,-14.2507,28.0762,116.502,12.4941,10.5141,0.649972,-8.5822,61.9301,105.406,18.3321,5.51342,4.53015,-15.2744,63.8143,112.848,17.8199,8.28457,2.44158,3.5669,61.2478,105.467,18.0882,5.47603,3.9614,-15.2443,74.2066,98.8954,18.3791,7.54531,-16.4593,-8.41937,60.8513,115.709,12.0806,9.78655,3.7785,-4.5273,52.2226,92.1016,17.2041,3.78026,-2.5995,-5.98137,60.9429,115.638,12.1819,9.76758,4.12838,-4.59744,50.711,113.461,14.3181,7.9651,6.53954,-17.0576,60.8116,115.67,12.0643,9.84501,4.13447,-4.48585,60.5949,115.25,11.8805,9.74507,4.23268,-5.12637])
# a = np.array([-1.,-1.])

from scipy.io import loadmat
Q = loadmat('/home/pracsys/catkin_ws/src/beliefspaceplanning/gpup_gp_node/data/sim_data_discrete_v5_d6_m10.mat')
Q = Q['D']
A = np.unique(Q[:,6:8], axis=0)


for u in range(100):
    print u
    a = A[0, :]
    s_mean = Q[100, :6]
    s = np.random.normal(s_mean.reshape(1,-1), 0.5, size=(100,6))

    res = gp_srv(s.reshape(-1,1), a)
    sn = np.array(res.next_states).reshape(-1,6)
    sn_mean = np.mean(sn, 0)

    # if np.linalg.norm(s_mean - sn_mean) > 2.5:
    plt.plot(s[:,0], s[:,1], 'ob')
    plt.plot(s_mean[0], s_mean[1], 'sb')

    plt.plot(sn[:,0], sn[:,1], '.g')
    plt.plot(sn_mean[0], sn_mean[1], 'sg')

    # plt.xlim(-70,70)
    # plt.ylim(40,150)
    plt.show()




# s_f = s.reshape(-1,6)
# plt.plot(s_f[:,0], s_f[:,1], 'ob')
# ms = np.mean(s_f, 0)
# plt.plot(ms[0], ms[1], 'sb')

# sk_f = sk.reshape(-1,6)
# plt.plot(sk_f[:,0], sk_f[:,1], '.r')
# msk = np.mean(sk_f, 0)
# plt.plot(msk[0], msk[1], 'sr')

# res = gp_srv(s.reshape(-1,1), a)
# # print res.next_states
# print res.node_probability

# sn_f = np.array(res.next_states).reshape(-1,6)
# plt.plot(sn_f[:,0], sn_f[:,1], '.g')
# msn = np.mean(sn_f, 0)
# plt.plot(msn[0], msn[1], 'sg')

# print np.linalg.norm(ms-msk), np.linalg.norm(ms-msn)

# plt.show()
exit(1)



##########################################################################################################

actions = np.concatenate( (np.array([[-0.2, 0.2] for _ in range(150)]), np.array([[-0.2, -0.2] for _ in range(150)]), np.array([[0.2, -0.2] for _ in range(150)]), np.array([[0.2, 0.2] for _ in range(150)]) ), axis=0 )

s_start = np.array([33.4020000000000,-325.930000000000,52,-198])
sigma_start = np.array([0., 0., 0., 0.])+1e-8

######################################## GP propagation ##################################################
if 1:
    print "Running GP."

    Np = 100 # Number of particles
    s = s_start
    S = np.tile(s, (Np,1)) + np.random.normal(0, sigma_start, (Np,state_dim))
    Ypred_mean_gp = s.reshape(1,state_dim)
    Ypred_std_gp = np.zeros((1,state_dim)).reshape(1,state_dim)

    Pgp = []; 
    print("Running (open loop) path...")
    for i in range(0, 5+0*actions.shape[0]):
        print("Step " + str(i) + " of " + str(actions.shape[0]))
        Pgp.append(S)
        a = actions[i,:]

        res = gp_srv(S.reshape(-1,1), a, 10)
        S_next = np.array(res.next_states).reshape(-1,state_dim)
        s_mean_next = np.mean(S_next, 0)
        s_std_next = np.std(S_next, 0)
        S = S_next

        Ypred_mean_gp = np.append(Ypred_mean_gp, s_mean_next.reshape(1,state_dim), axis=0)
        Ypred_std_gp = np.append(Ypred_std_gp, s_std_next.reshape(1,state_dim), axis=0)

    ######################################## GPUP propagation ###############################################

    print "Running GPUP."

    s = s_start
    sigma_x = sigma_start
    Ypred_mean_gpup = s.reshape(1,state_dim)
    Ypred_std_gpup = sigma_x.reshape(1,state_dim)

    print("Running (open loop) path...")
    for i in range(0, 5+0*actions.shape[0]):
        print("Step " + str(i) + " of " + str(actions.shape[0]))
        a = actions[i,:]

        res = gpup_srv(s, sigma_x, a, 10)
        s_next = np.array(res.next_mean)
        sigma_next = np.array(res.next_std)
        s = s_next
        sigma_x = sigma_next

        Ypred_mean_gpup = np.append(Ypred_mean_gpup, s_next.reshape(1,state_dim), axis=0)
        Ypred_std_gpup = np.append(Ypred_std_gpup, sigma_next.reshape(1,state_dim), axis=0)

    ######################################## Save ###########################################################

    # with open('belief_ros.pkl', 'w') as f:  # Python 3: open(..., 'wb')
    #     pickle.dump([Ypred_mean_gp, Ypred_std_gp, Ypred_mean_gpup, Ypred_std_gpup, Pgp], f)

######################################## Plot ###########################################################

with open('belief_ros.pkl') as f:  
    Ypred_mean_gp, Ypred_std_gp, Ypred_mean_gpup, Ypred_std_gpup, Pgp = pickle.load(f)  

fig = plt.figure(0)
ax = fig.add_subplot(111)#, aspect='equal')
# ax.plot(Xtest[:,0], Xtest[:,1], 'b-')

prtc_mean_line, = ax.plot([], [], '-r')
prtc, = ax.plot([], [], '.k')
prtc_mean, = ax.plot([], [], '*r')
patch_prtc = Ellipse(xy=(Ypred_mean_gp[0,0], Ypred_mean_gp[0,1]), width=Ypred_std_gp[0,0]*2, height=Ypred_std_gp[0,1]*2, angle=0., animated=True, edgecolor='y', linewidth=2., fill=False)
ax.add_patch(patch_prtc)

patch = Ellipse(xy=(Ypred_mean_gpup[0,0], Ypred_mean_gpup[0,1]), width=Ypred_std_gpup[0,0]*2, height=Ypred_std_gpup[0,1]*2, angle=0., animated=True, edgecolor='m', linewidth=2., linestyle='--', fill=False)
ax.add_patch(patch)
patch_mean, = ax.plot([], [], '--m')

plt.xlim(np.min(Ypred_mean_gp, 0)[0]*0.8, np.max(Ypred_mean_gp, 0)[0]*1.2)
plt.ylim(np.min(Ypred_mean_gp, 0)[1]*0.95, np.max(Ypred_mean_gp, 0)[1]*1.05)

def init():
    prtc.set_data([], [])
    prtc_mean.set_data([], [])
    prtc_mean_line.set_data([], [])
    patch_mean.set_data([], [])

    return prtc, prtc_mean, prtc_mean_line, patch_prtc, patch, patch_mean,

def animate(i):

    S = Pgp[i]
    prtc.set_data(S[:,0], S[:,1])
    prtc_mean.set_data(Ypred_mean_gp[i,0], Ypred_mean_gp[i,1])
    prtc_mean_line.set_data(Ypred_mean_gp[:i,0], Ypred_mean_gp[:i,1])
    patch_mean.set_data(Ypred_mean_gpup[:i,0], Ypred_mean_gpup[:i,1])

    patch_prtc.center = (Ypred_mean_gp[i,0], Ypred_mean_gp[i,1])
    patch_prtc.width = Ypred_std_gp[i,0]*2
    patch_prtc.height = Ypred_std_gp[i,1]*2

    patch.center = (Ypred_mean_gpup[i,0], Ypred_mean_gpup[i,1])
    patch.width = Ypred_std_gpup[i,0]*2
    patch.height = Ypred_std_gpup[i,1]*2

    return prtc, prtc_mean, prtc_mean_line, patch_prtc, patch, patch_mean,

ani = animation.FuncAnimation(fig, animate, frames=len(Pgp), init_func=init, interval=10, repeat_delay=100, blit=True)
# ani.save('belief2.mp4', metadata={'artist':'Avishai Sintov','year':'2019'})

plt.figure(1)
plt.plot(Ypred_std_gp[:,0], Ypred_std_gp[:,1],'.-y')
plt.plot(Ypred_std_gpup[:,0], Ypred_std_gpup[:,1],'.-m')

# plt.plot(Ypred_mean_gp[:,0], Ypred_mean_gp[:,1],'.-y')
# plt.plot(Ypred_mean_gpup[:,0], Ypred_mean_gpup[:,1],'.-m')

plt.show()

